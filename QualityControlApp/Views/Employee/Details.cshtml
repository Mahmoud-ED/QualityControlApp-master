@model QualityControlApp.ViewModels.CompanyQuestionContentVM

@* --- ملفات CSS --- *@
@* لنفترض أنك تستخدم Bootstrap 5 *@
@* <link href="~/lib/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet" /> *@ @* تأكد من تضمين Bootstrap *@
<link href="~/css/company-question-visual-only.css" rel="stylesheet" asp-append-version="true" /> @* ملف CSS مخصص للتصميم فقط *@
<link href="~/css/media.css" rel="stylesheet" /> @* ملف media الأصلي *@
@* يمكنك إزالة الرابط إلى employee.css إذا كانت الأنماط ستوضع في الملف الجديد *@
@* <link href="~/css/employee.css" rel="stylesheet" />  *@


<div class="container mt-4 content-wrapper"> @* Added container and wrapper class *@
    <h1 class="mb-4">@ViewData["Title"]</h1>

    @* --- قسم المعلومات الأساسية (داخل Card) --- *@
    <div class="card shadow-sm mb-4">
        <div class="card-header">
            <h5 class="mb-0">المعلومات الأساسية</h5>
        </div>
        <div class="card-body">
            <div class="row g-3 align-items-end"> @* Use Bootstrap grid with gutters and alignment *@
                @* Active Status Form *@
                <div class="col-md-auto">
                    <form asp-action="UpdateActive" asp-route-companyQuestionId="@Model.CompanyQuestion.Id" method="post" id="activeStatusForm">
                        <input type="hidden" name="Id" value="@Model.CompanyQuestion.Id" />
                        <div class="form-check form-switch mb-0"> @* Use Bootstrap switch style *@
                             <input class="form-check-input" type="checkbox" role="switch" id="Active" name="Active" value="true"
                                   @(Model.CompanyQuestion.Active ? "checked" : "")
                                   onchange="this.form.submit();" />
                            <label class="form-check-label" for="Active">الحالة (نشط)</label>
                        </div>
                    </form>
                </div>

                @* Company Name Dropdown *@
                <div class="col-md-3">
                    <label asp-for="CompanyQuestion.CompanyId" class="form-label small mb-1">اسم الشركة</label>
                    <select asp-for="CompanyQuestion.CompanyId" class="form-select form-select-sm" asp-items="ViewBag.Companies" disabled> @* Added form-select, form-select-sm, disabled *@
                         <option value="">@Model.CompanyQuestion.Company?.Name</option>
                    </select>
                    <span asp-validation-for="CompanyQuestion.CompanyId" class="text-danger small"></span>
                </div>

             

                @* Creation Date *@
                <div class="col-md-3">
                    <label asp-for="CompanyQuestion.Created" class="form-label small mb-1">تاريخ الإنشاء</label>
                    <input asp-for="CompanyQuestion.Created" class="form-control form-control-sm" readonly /> @* Added form-control, form-control-sm *@
                    <span asp-validation-for="CompanyQuestion.Created" class="text-danger small"></span>
                </div>
            </div>
        </div>
    </div>


    @* --- قسم روابط فئات الأسئلة --- *@
    @if (Model?.QuestionCategoryType?.Any() == true)
    {
        <div class="mb-4">
            <h5 class="mb-3">فئات الأسئلة</h5>
            <div class="d-flex flex-wrap gap-2"> @* Use flexbox for better wrapping and spacing *@
                @foreach (var categoryType in Model.QuestionCategoryType)
                {
                     <a asp-action="Details"
                           asp-route-id="@Model.CompanyQuestion.Id"
                           asp-route-CategoryId="@categoryType.Id"
                             asp-route-anchor="questionDetailsSection"
                           class="btn btn-outline-info btn-sm category-link"> @* Use Bootstrap button style *@
                            @categoryType.CategoryName
                            @* يمكنك إضافة معلومات إضافية مثل الكود هنا: @categoryType.Code *@
                     </a>
                }
            </div>
        </div>
    }
    else
    {
        <div class="alert alert-secondary" role="alert">
            لا توجد أنواع فئات أسئلة للعرض.
        </div>
    }


    @* --- قسم ملخص أنواع الأسئلة (داخل Cards) --- *@
    <div class="mb-4">
        <h5 class="mb-3">ملخص أنواع الأسئلة</h5>
        <div class="row g-3"> @* Bootstrap grid with gutters *@
       @if (Model.QuestionType != null)
       {
            @foreach (var question in Model.QuestionType)
            {
                var totalScore = Model.CompanyQuestionContent?
                    .Where(q => q.Question.QuestionTypeId == question.Id)
                    .Sum(q => (int?)q.Score) ?? 0;

                var maxScore = Model.CompanyQuestionContent?
                    .Where(q => q.Question.QuestionTypeId == question.Id)
                    .Sum(q => (int?)q.Question.MaxGrid) ?? 0;

                var percentage = maxScore > 0 ? (int)Math.Round((double)totalScore / maxScore * 100) : 0;

                <div class="col-lg-3 col-md-4 col-sm-6"> 
                     <a asp-action="GetQuestionType" asp-route-TypeId="@question.Id" asp-route-id="@Model.CompanyQuestion.Id"   asp-route-anchor="questionDetailsSection" class="text-decoration-none question-type-link">
                         <div class="card h-100 shadow-sm question-type-card"> 
                            <div class="card-body p-3">
                                <div class="d-flex justify-content-between align-items-center mb-2">
                                    <h6 class="card-title mb-0 text-primary fw-bold">@question.TypeName</h6> 
                                    <i class="bi bi-tag fs-4 text-muted"></i>
                                </div>
                                <p class="card-text small text-muted mb-2">
                                    النقاط: @totalScore / @maxScore
                                </p>
                                <div class="progress" style="height: 8px;"> @* Progress bar *@
                                    @* <div class="progress-bar bg-success" role="progressbar" style="width: @percentage%;" aria-valuenow="@percentage" aria-valuemin="0" aria-valuemax="100"></div> *@
                               
                                @{
    var progressBarClass = "bg-danger"; // أقل من 50%
    if (percentage >= 50) progressBarClass = "bg-warning"; // 50-75%
    if (percentage >= 75) progressBarClass = "bg-success"; // 75%+
    // يمكنك إضافة bg-info أو ألوان أخرى حسب الحاجة
}
<div class="progress-bar @progressBarClass" role="progressbar" style="width: @percentage%;" aria-valuenow="@percentage" aria-valuemin="0" aria-valuemax="100">
    @* يمكنك إضافة النسبة المئوية هنا إذا أردت *@
    @* @percentage% *@
</div>
                                </div>
                            </div>
                        </div>
                     </a>
                </div>
            }
            }
        </div>
    </div>


    @* --- قسم جدول تفاصيل الأسئلة (داخل Card) --- *@
    <form asp-controller="CompanyQuestion"> @* Form tag kept as in original *@
    <div class="card shadow-sm mb-4" id="questionDetailsSection">
        <div class="card-header">
            <h5 class="mb-0">تفاصيل الأسئلة</h5>
        </div>
        <div class="card-body p-0">
            <div class="table-responsive">
               
                
                <table class="table table-striped table-hover table-bordered mb-0 align-middle question-details-table">
                    <thead class="table-light">
                        <tr>
                            <th style="width: 50%;">السؤال</th>

                            @if (ViewBag.Type == "Old")
                            {
                                <th class="text-center" style="width: 25%;">النقاط</th>
                                <th class="text-center" style="width: 25%;">الحد الأقصى</th>
                            }
                            else
                            {
                                <th class="text-center" style="width: 35%;">الفحص والملاحظات</th>
                                <th class="text-center" style="width: 15%;">المستوى</th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.CompanyQuestionContent != null && Model.CompanyQuestionContent.Any())
                        {
                            @foreach (var question in Model.CompanyQuestionContent)
                            {
                                <tr class="question-row" data-id="@question.QuestionId">
                                    <td>@Html.Raw(question.Question.Content)</td>

                                    @if (Model.CompanyQuestion.Type =="Old")
                                    {
                                        <td class="text-center">
                                            <input type="hidden" class="row-id" value="@question.Id" />
                                            <input type="number"
                                                   value="@question.Score"
                                                   class="form-control form-control-sm text-center row-score score-input-visual" />
                                        </td>
                                        <td class="text-center">@question.Question.MaxGrid</td>
                                    }
                                    else
                                    {
                                        <td class="inspect-notes-td-visual">
                                            <input type="hidden" class="row-id" value="@question.Id" />
                                            <div class="d-flex flex-column flex-sm-row align-items-sm-start gap-2">
                                                <select class="form-select form-select-sm row-inspect inspect-select-visual">
                                                    <option value="">اختر</option>
                                                    <option value="N" selected="@(question.Inspect == "N" ? "selected" : null)">N</option>
                                                    <option value="Ns" selected="@(question.Inspect == "Ns" ? "selected" : null)">Ns</option>
                                                </select>
                                                <div class="nots-container flex-grow-1" style="display: none;">
                                                    <textarea class="form-control form-control-sm nots-text notes-textarea-visual"
                                                                  placeholder="ملاحظات...">@question.Nots</textarea>
                                                </div>
                                            </div>
                                        </td>
                                        <td class="inspect-level-td-visual">
                                            <select class="form-select form-select-sm nots-level level-select-visual"
                                                    style="display: none;">
                                                <option value="0" selected="@(question.Level == 0)">مستوى</option>
                                                <option value="1" selected="@(question.Level == 1)">1</option>
                                                <option value="2" selected="@(question.Level == 2)">2</option>
                                                <option value="3" selected="@(question.Level == 3)">3</option>
                                            </select>
                                        </td>
                                    }
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="@(ViewBag.Type == "Old" ? 3 : 3)" class="text-center p-4 text-muted">
                                    لا توجد أسئلة لعرضها.
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>












            </div>
        </div>
    </div>


        @* --- قسم أزرار الإجراءات --- *@
         <div class="mt-4 d-flex justify-content-end gap-2 action-buttons-container">
            <div data-company-question-id="@Model.CompanyQuestion.Id"> @* Keep data attribute if needed elsewhere *@
                 @* --- IMPORTANT: Keeping original id "saveButton" --- *@
                <button id="saveButton" type="button" class="btn btn-primary"> @* Bootstrap button style *@
                    <i class="bi bi-save me-1"></i> @* Optional Icon *@
                    حفظ
                </button>
            </div>
          
        </div>

    </form> @* End Form *@
      <a asp-controller="Index" asp-action="Index" asp-route-Id="@Model.CompanyQuestion.UserId" asp-route-Type="@Model.CompanyQuestion.Type" class="btn btn-secondary"> @* Bootstrap button style *@
                 <i class="bi bi-arrow-left me-1"></i> @* Optional Icon *@
                رجوع إلى القائمة
            </a>

    @* --- قسم الرسم البياني (تصميم فقط) --- *@
    <div class="mt-5 chart-container">
        <h5 class="mb-3">الرسم البياني</h5>
        <div class="card shadow-sm">
            <div class="card-body">
                 <div id="apexLineChart" style="min-height: 350px;" class="d-flex justify-content-center align-items-center bg-light text-muted">
                     @* Chart will be rendered here by ApexCharts if configured *@
                     <span>سيتم عرض الرسم البياني هنا...</span>
                 </div>
            </div>
        </div>
    </div>

</div> @* End container *@


@* --- قسم السكربتات --- *@
@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }

    @* --- IMPORTANT: Including the ORIGINAL JavaScript --- *@
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script> @* Ensure jQuery is loaded if original script uses it *@
    <script src="https://cdn.jsdelivr.net/npm/apexcharts"></script> @* Keep ApexCharts if used *@

    <script>
        // --- PASTE THE ORIGINAL JAVASCRIPT CODE HERE ---
        // (The code provided in your very first message that uses jQuery)

        $(document).ready(function () {
            // JS for showing/hiding notes based on 'Ns' selection
            $('.row-inspect').on('change', function () {
                var selectedValue = $(this).val();
                var parentTd = $(this).closest('td'); // The TD containing the dropdown
                var row = $(this).closest('tr');      // The entire table row (tr)
                var notsContainer = parentTd.find('.nots-container'); // Find notes container within the same TD
                var notesLevelSelect = row.find('.nots-level');    // Find level select within the same row

                if (selectedValue === 'Ns') {
                    notsContainer.show();
                    notesLevelSelect.show(); // Show the level dropdown itself
                    row.css('background-color', '#f8d7da'); // Apply light red background directly
                } else {
                    notsContainer.hide();
                    notesLevelSelect.hide(); // Hide the level dropdown
                    row.css('background-color', ''); // Remove background color
                    // Optionally clear values when hiding
                    //notsContainer.find('.nots-text').val('');
                    //notesLevelSelect.val('0');
                }
            });

            // Initialize state on page load
            $('.row-inspect').each(function () {
                var selectedValue = $(this).val();
                var parentTd = $(this).closest('td');
                var row = $(this).closest('tr');
                var notsContainer = parentTd.find('.nots-container');
                var notesLevelSelect = row.find('.nots-level'); // Find the level select

                // Initial check to show/hide elements and set background
                if (selectedValue === 'Ns') {
                    notsContainer.show();
                    notesLevelSelect.show();
                    row.css('background-color', '#f8d7da');
                } else {
                    notsContainer.hide();
                    notesLevelSelect.hide();
                    row.css('background-color', '');
                }
            });

            // JS for the Save Button
            $('#saveButton').click(function () {
                var dataToSend = [];

                $('tr.question-row').each(function () {
                    var row = $(this);
                    var id = row.find('.row-id').val();
                    var scoreInput = row.find('.row-score'); // Find score input
                    var inspectSelect = row.find('.row-inspect'); // Find inspect select
                    var notesText = row.find('.nots-text'); // Find notes text
                    var levelSelect = row.find('.nots-level'); // Find level select

                    // Determine values based on existence
                    var scoreValue = scoreInput.length > 0 ? scoreInput.val() : null;
                    var inspectValue = inspectSelect.length > 0 ? inspectSelect.val() : null;
                    var notesValue = notesText.length > 0 ? notesText.val() : null;
                    var levelValue = levelSelect.length > 0 ? levelSelect.val() : null;

                    // Only add rows that have an ID
                    if (id) {
                        dataToSend.push({
                            Id: id,
                            Score: scoreValue,
                            Inspect: inspectValue,
                            Notes: notesValue,
                            Level: levelValue
                        });
                    }
                });

                // console.log("Data to send:", dataToSend); // For debugging

                // Original AJAX call
                $.ajax({
                    type: 'POST',
                    url: '/CompanyQuestion/UpdateQuestionContent', // Ensure URL is correct
                    data: JSON.stringify(dataToSend),
                    contentType: 'application/json; charset=utf-8',
                     // Add headers like AntiForgeryToken if needed
                    // headers: {
                    //     'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    // },
                    success: function (response) {
                        // alert('تم حفظ البيانات بنجاح ✅');
                        location.reload(); // Reload page on success
                    },
                    error: function (xhr, status, error) {
                        alert('حدث خطأ أثناء الحفظ ❌');
                        console.log("Save Error:", error, status, xhr); // Log detailed error
                    }
                });
            });
        });

        // --- END OF ORIGINAL JAVASCRIPT ---
    </script>

    @* <script src="~/js/SaveContent.js"></script> *@ @* Remove link to external JS if using inline original script *@
}