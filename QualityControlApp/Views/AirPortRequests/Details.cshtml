@model QualityControlApp.Models.Entities.AirPortRequest // Changed from VM to Entity for direct display

@{
    ViewData["Title"] = "Airport Request Details";
}

<div class="container-fluid py-4">
    <!-- Added container-fluid for better spacing -->
    <div class="card shadow-lg border-0">
        <!-- Added border-0 for cleaner look -->
        <div class="card-header bg-primary text-white py-3">
            <div class="d-flex justify-content-between align-items-center">
                <h2 class="card-title mb-0">
                    <i class="fas fa-file-alt me-2"></i>@ViewData["Title"]
                </h2>
                @{
                    // Display current status as a badge
                    var statusConfig = Model.RequestStatus switch
                    {
                        "Approved" => (BadgeClass: "bg-success", Text: "Approved", Icon: "fas fa-check-circle"),
                        "Pending" => (BadgeClass: "bg-warning text-dark", Text: "Pending", Icon: "fas fa-clock"), // text-dark for better contrast on yellow
                        "Rejected" => (BadgeClass: "bg-danger", Text: "Rejected", Icon: "fas fa-times-circle"),
                        _ => (BadgeClass: "bg-secondary", Text: "Unknown", Icon: "fas fa-question-circle")
                    };
                }
                <span class="badge rounded-pill px-3 py-2 @statusConfig.BadgeClass fs-6">
                    <i class="@statusConfig.Icon me-1"></i> Status: @statusConfig.Text
                </span>
            </div>
        </div>
        <div class="card-body p-4">
            <div class="row g-4">
                <!-- Increased gap to g-4 for more spacing -->
                <!-- Section: Basic Information -->
                <div class="col-12">
                    <h5 class="fw-semibold text-primary mb-3 border-bottom pb-2"><i class="fas fa-info-circle me-2"></i>Basic Information</h5>
                    <dl class="row mb-0">
                        <dt class="col-sm-4 col-md-3 text-muted">Department:</dt>
                        <dd class="col-sm-8 col-md-9">@Model.Department</dd>

                        <dt class="col-sm-4 col-md-3 text-muted">Applicant Email:</dt>
                        <dd class="col-sm-8 col-md-9">@Model.Email</dd>

                        <dt class="col-sm-4 col-md-3 text-muted">Sender Name:</dt>
                        <dd class="col-sm-8 col-md-9">@Model.SenderName</dd>

                        <dt class="col-sm-4 col-md-3 text-muted">Company Name:</dt>
                        <dd class="col-sm-8 col-md-9">@Model.CompanyName</dd>

                        <dt class="col-sm-4 col-md-3 text-muted">Request Time:</dt>
                        <dd class="col-sm-8 col-md-9">@Model.RequestTime.ToString("dd MMM yyyy, HH:mm")</dd>

                        <dt class="col-sm-4 col-md-3 text-muted">Entry Time (Initial):</dt>
                        <dd class="col-sm-8 col-md-9">@Model.EntryTime.ToString("dd MMM yyyy, HH:mm")</dd>
                    </dl>
                </div>

                <!-- Section: Flight Details -->
                <div class="col-12">
                    <h5 class="fw-semibold text-primary mt-3 mb-3 border-bottom pb-2"><i class="fas fa-plane-departure me-2"></i>Flight Details</h5>
                    <dl class="row mb-0">
                        <dt class="col-sm-4 col-md-3 text-muted">Flight Date:</dt>
                        <dd class="col-sm-8 col-md-9">@Model.FlightDate.ToString("dd MMM yyyy")</dd>

                        <dt class="col-sm-4 col-md-3 text-muted">Aircraft Type:</dt>
                        <dd class="col-sm-8 col-md-9">@Model.AircraftType</dd>

                        <dt class="col-sm-4 col-md-3 text-muted">Aircraft Registration:</dt>
                        <dd class="col-sm-8 col-md-9">@Model.AircraftRegistration</dd>

                        <dt class="col-sm-4 col-md-3 text-muted">Call Sign:</dt>
                        <dd class="col-sm-8 col-md-9">@Model.CallSign</dd>

                        <dt class="col-sm-4 col-md-3 text-muted">Flight Path (Route):</dt>
                        <dd class="col-sm-8 col-md-9">@Model.FlightPath</dd>

                        <dt class="col-sm-4 col-md-3 text-muted">Landing/Takeoff Time Slot:</dt>
                        <dd class="col-sm-8 col-md-9">@Model.LandingTakeoffTime</dd>

                        <dt class="col-sm-4 col-md-3 text-muted">Flight Purpose:</dt>
                        <dd class="col-sm-8 col-md-9">@Model.FlightPurpose</dd>

                        <dt class="col-sm-4 col-md-3 text-muted">Designated Entry/Exit Points:</dt>
                        <dd class="col-sm-8 col-md-9">@Model.EntryExitPoints</dd>

                        <dt class="col-sm-4 col-md-3 text-muted">Flight Number:</dt>
                        <dd class="col-sm-8 col-md-9">@Model.FlightNumber ?? <span class="text-muted fst-italic">N/A</span></dd>

                        <dt class="col-sm-4 col-md-3 text-muted">Actual Entry Point:</dt>
                        <dd class="col-sm-8 col-md-9">@Model.EntryPoint ?? <span class="text-muted fst-italic">N/A</span></dd>

                        <dt class="col-sm-4 col-md-3 text-muted">Actual Exit Point:</dt>
                        <dd class="col-sm-8 col-md-9">@Model.ExitPoint ?? <span class="text-muted fst-italic">N/A</span></dd>

                        <dt class="col-sm-4 col-md-3 text-muted">Estimated Entry Time (Actual):</dt>
                        <dd class="col-sm-8 col-md-9">@Model.EstimatedEntryTime?.ToString("dd MMM yyyy, HH:mm") ?? <span class="text-muted fst-italic">N/A</span></dd>

                        <dt class="col-sm-4 col-md-3 text-muted">Estimated Exit Time (Actual):</dt>
                        <dd class="col-sm-8 col-md-9">@Model.EstimatedExitTime?.ToString("dd MMM yyyy, HH:mm") ?? <span class="text-muted fst-italic">N/A</span></dd>
                    </dl>
                </div>

                <!-- Section: Crew & Cargo -->
                <div class="col-12">
                    <h5 class="fw-semibold text-primary mt-3 mb-3 border-bottom pb-2"><i class="fas fa-users-cog me-2"></i>Crew & Cargo</h5>
                    <dl class="row mb-0">
                        <dt class="col-sm-4 col-md-3 text-muted">Pilot Name:</dt>
                        <dd class="col-sm-8 col-md-9">@Model.PilotName ?? <span class="text-muted fst-italic">N/A</span></dd>

                        <dt class="col-sm-4 col-md-3 text-muted">Cargo Details:</dt>
                        <dd class="col-sm-8 col-md-9">@Model.CargoDetails ?? <span class="text-muted fst-italic">N/A</span></dd>

                        <dt class="col-sm-4 col-md-3 text-muted">Crew Count:</dt>
                        <dd class="col-sm-8 col-md-9">@Model.CrewCount?.ToString() ?? <span class="text-muted fst-italic">N/A</span></dd>

                        <dt class="col-sm-4 col-md-3 text-muted">Crew Nationalities:</dt>
                        <dd class="col-sm-8 col-md-9">@Model.CrewNationalities ?? <span class="text-muted fst-italic">N/A</span></dd>
                    </dl>
                </div>

                <!-- Section: Notes -->
                <div class="col-12">
                    <h5 class="fw-semibold text-primary mt-3 mb-3 border-bottom pb-2"><i class="fas fa-sticky-note me-2"></i>Notes</h5>
                    <div class="bg-light p-3 rounded">
                        @if (!string.IsNullOrWhiteSpace(Model.Notes))
                        {
                            <p class="mb-0" style="white-space: pre-wrap;">@Model.Notes</p> <!-- Using pre-wrap to preserve line breaks -->
                        }
                        else
                        {
                            <p class="mb-0 text-muted fst-italic">No additional notes provided.</p>
                        }
                    </div>
                </div>





                @* --------------Files *@
                @if (Model.RequestFiles != null && Model.RequestFiles.Any())
                {
                    <div class="col-lg-12">
                        <h5 class="fw-semibold text-primary mt-4 mb-3 border-bottom pb-2">
                            <i class="fas fa-paperclip me-2"></i>Attachments
                        </h5>
                        <ul class="list-group list-group-flush">
                            @foreach (var file in Model.RequestFiles)
                            {
                                var isNs = file.Inspect?.ToLower() == "ns";

                                <li class="list-group-item px-0 py-3 d-flex justify-content-between align-items-start flex-column flex-md-row">
                                    <div class="flex-grow-1">
                                        <div class="mb-1">
                                            <i class="fas fa-file-alt text-secondary me-2"></i>
                                            <a href="@Url.Content("~/pictures/requestfiles/" + file.FileName)" target="_blank" class="text-decoration-none fw-semibold">
                                                @file.FileName
                                            </a>
                                            @if (file.FileType != null)
                                            {
                                                <span class="badge bg-secondary bg-opacity-10 text-secondary-emphasis rounded-pill ms-2 small">
                                                    @file.FileType.TypeName
                                                </span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-light text-muted rounded-pill ms-2 small">Type N/A</span>
                                            }
                                        </div>

                                        <!-- Display Inspect and Nots -->
                                        <div class="mt-1 small">
                                            <span class="fw-bold @(isNs ? "text-danger" : "text-muted")">
                                                Inspect: @file.Inspect
                                            </span>
                                            @if (isNs && !string.IsNullOrWhiteSpace(file.Nots))
                                            {
                                                <span class="ms-3 text-danger">
                                                    <i class="fas fa-exclamation-circle me-1"></i>Nots: @file.Nots
                                                </span>
                                            }
                                        </div>
                                    </div>

                                    <div class="mt-2 mt-md-0">
                                        <a href="@Url.Content("~/pictures/requestfiles/" + file.FileName)" target="_blank"
                                           class="btn btn-sm btn-outline-primary rounded-pill px-3">
                                            <i class="fas fa-download me-1"></i> View/Download
                                        </a>
                                    </div>
                                </li>
                            }
                        </ul>
                    </div>
                }
            
            
            
            
            
            
            
            <!-- Action Buttons -->
       
            
            
             <div id="attachmentsContainer" class="col-12 mt-3"></div> <!-- Added col-12 and mt-3 for spacing -->

                <div class="col-12">
                    <!-- Wrapped button in col-12 for proper grid alignment -->
                    <button type="button" class="btn btn-primary mt-2" onclick="addAttachmentRow()">
                        <i class="fas fa-paperclip me-1"></i>Add Attachment <!-- Translated & Icon added -->
                    </button>
                </div>
            </div>

            <!-- Image Preview Box (No text to translate here, alt text already generic) -->
            <div id="imagePreview" class="text-center my-3" style="display: none;">
                <img id="previewImage" src="" alt="Preview" class="img-thumbnail" style="max-width: 100%; max-height: 300px;" />
            </div>
            
            
            
            
            
            
            <div class="mt-5 pt-4 border-top">
                <div class="d-flex justify-content-between align-items-center flex-wrap gap-2">
                    <a asp-action="Index" class="btn btn-outline-secondary rounded-pill px-4 py-2">
                        <i class="fas fa-arrow-left me-2"></i>Back to List
                    </a>
                    <div class="d-flex gap-2 flex-wrap">
                        <!-- Added flex-wrap for responsiveness -->
                        <a asp-action="ChangeStatus" asp-route-id="@Model.Id" class="btn btn-info text-white rounded-pill px-4 py-2">
                            <!-- text-white for better contrast on btn-info -->
                            <i class="fas fa-sync-alt me-2"></i>Change Status
                        </a>
                        <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary rounded-pill px-4 py-2">
                            <i class="fas fa-edit me-2"></i>Edit Request
                        </a>
                        <form asp-action="Delete" asp-controller="AirPortRequests" method="post" onsubmit="return confirm('Are you sure you want to delete this request? This action cannot be undone.');" class="d-inline">
                            <input type="hidden" name="id" value="@Model.Id" />
                            <button type="submit" class="btn btn-danger rounded-pill px-4 py-2">
                                <i class="fas fa-trash-alt me-2"></i>Delete Request
                            </button>
                        </form>
                        <button onclick="window.print()" class="btn btn-outline-success rounded-pill px-4 py-2">
                            <i class="fas fa-print me-2"></i>Print
                        </button>
                    </div>
                </div>
            </div>
        </div> <!-- /.card-body -->
    </div> <!-- /.card -->
</div> <!-- /.container-fluid -->
@section Styles {
    <style>
        body {
            background-color: #f8f9fa; /* Light gray background for the page */
        }

        .card {
            border-radius: 0.625rem; /* 10px */
        }

        dl.row dt { /* Styling for definition list terms */
            font-weight: 500;
        }

        dl.row dd { /* Styling for definition list descriptions */
            margin-bottom: 0.5rem;
        }

        .badge.fs-6 { /* Ensure badge font size is appropriate */
            font-size: 0.9rem;
        }
        /* For Bootstrap 5.3+ subtle badges (e.g., bg-success-subtle) */
        .bg-success-subtle {
            background-color: var(--bs-success-bg-subtle) !important;
        }

        .text-success-emphasis {
            color: var(--bs-success-text-emphasis) !important;
        }

        .bg-warning-subtle {
            background-color: var(--bs-warning-bg-subtle) !important;
        }

        .text-warning-emphasis {
            color: var(--bs-warning-text-emphasis) !important;
        }

        .bg-danger-subtle {
            background-color: var(--bs-danger-bg-subtle) !important;
        }

        .text-danger-emphasis {
            color: var(--bs-danger-text-emphasis) !important;
        }

        .bg-secondary-subtle {
            background-color: var(--bs-secondary-bg-subtle) !important;
        }

        .text-secondary-emphasis {
            color: var(--bs-secondary-text-emphasis) !important;
        }

    </style>
}

@section Scripts {
    @* No specific JavaScript needed for a read-only details page unless there are interactive elements not shown. *@
}