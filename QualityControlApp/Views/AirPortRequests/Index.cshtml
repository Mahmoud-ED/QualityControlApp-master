@model IEnumerable<QualityControlApp.Models.Entities.AirPortRequest>

@{
    ViewData["Title"] = "Airport Requests List";
    // Retrieve filter values from query string for persistence
    var currentEmail = ViewContext.HttpContext.Request.Query["email"].FirstOrDefault();
    var currentStatus = ViewContext.HttpContext.Request.Query["status"].FirstOrDefault() ?? "All";
    var currentRequestDateFrom = ViewContext.HttpContext.Request.Query["requestDateFrom"].FirstOrDefault();
    var currentRequestDateTo = ViewContext.HttpContext.Request.Query["requestDateTo"].FirstOrDefault();
    var currentFlightDateFrom = ViewContext.HttpContext.Request.Query["flightDateFrom"].FirstOrDefault();
    var currentFlightDateTo = ViewContext.HttpContext.Request.Query["flightDateTo"].FirstOrDefault();
}

<div class="container-fluid py-4">

    <!-- Header Section -->
    <div class="d-flex justify-content-between align-items-center mb-4 pb-2 border-bottom">
        <div>
            <h1 class="h2 fw-bold text-dark mb-1"><i class="fas fa-list-alt me-2 text-primary"></i>@ViewData["Title"]</h1>
            <p class="text-muted mb-0">Browse, filter, and manage airport overflight requests.</p>
        </div>
        <a href="@Url.Action("Create")" class="btn btn-primary rounded-pill shadow-sm px-4 py-2">
            <i class="fas fa-plus-circle me-2"></i> Create New Request
        </a>
    </div>

    <!-- Filters & Search Section -->
    <div class="card border-0 shadow-sm mb-4">
        <div class="card-header bg-light py-3 border-bottom-0">
            <a class="h6 fw-semibold text-decoration-none text-dark d-flex justify-content-between align-items-center" data-bs-toggle="collapse" href="#searchFilterCollapse" role="button" aria-expanded="false" aria-controls="searchFilterCollapse">
                <span><i class="fas fa-filter me-2"></i>Search & Filter Options</span>
                <i class="fas fa-chevron-down collapse-icon"></i>
            </a>
        </div>
        <div class="collapse" id="searchFilterCollapse">
            <div class="card-body p-4">
                <form method="get" asp-action="Index" class="row g-3">
                    <!-- Email & Status -->
                    <div class="col-md-4">
                        <label for="emailFilter" class="form-label small fw-semibold">Email</label>
                        <input type="text" id="emailFilter" name="email" class="form-control form-control-sm" placeholder="Enter applicant email" value="@currentEmail" />
                    </div>
                    <div class="col-md-3">
                        <label for="statusFilter" class="form-label small fw-semibold">Status</label>
                        <select id="statusFilter" name="status" class="form-select form-select-sm">
                            <option value="All" selected="@(currentStatus == "All")">All Statuses</option>
                            <option value="Pending" selected="@(currentStatus == "Pending")">Pending</option>
                            <option value="Approved" selected="@(currentStatus == "Approved")">Approved</option>
                            <option value="Rejected" selected="@(currentStatus == "Rejected")">Rejected</option>
                        </select>
                    </div>
                    <div class="col-md-5"></div> <!-- Spacer -->
                    <!-- Request Date Range -->
                    <div class="col-12"><hr class="my-2"><h6 class="small fw-bold text-muted text-uppercase">Request Date Range</h6></div>
                    <div class="col-md-3">
                        <label for="requestDateFromFilter" class="form-label small fw-semibold">From</label>
                        <input type="date" id="requestDateFromFilter" name="requestDateFrom" class="form-control form-control-sm" value="@currentRequestDateFrom" />
                    </div>
                    <div class="col-md-3">
                        <label for="requestDateToFilter" class="form-label small fw-semibold">To</label>
                        <input type="date" id="requestDateToFilter" name="requestDateTo" class="form-control form-control-sm" value="@currentRequestDateTo" />
                    </div>
                    <div class="col-md-6"></div> <!-- Spacer -->
                    <!-- Flight Date Range -->
                    <div class="col-12"><hr class="my-2"><h6 class="small fw-bold text-muted text-uppercase">Flight Date Range</h6></div>
                    <div class="col-md-3">
                        <label for="flightDateFromFilter" class="form-label small fw-semibold">From</label>
                        <input type="date" id="flightDateFromFilter" name="flightDateFrom" class="form-control form-control-sm" value="@currentFlightDateFrom" />
                    </div>
                    <div class="col-md-3">
                        <label for="flightDateToFilter" class="form-label small fw-semibold">To</label>
                        <input type="date" id="flightDateToFilter" name="flightDateTo" class="form-control form-control-sm" value="@currentFlightDateTo" />
                    </div>

                    <!-- Action Buttons -->
                    <div class="col-12 mt-4 d-flex justify-content-end gap-2">
                        <a asp-action="Index" class="btn btn-sm btn-outline-secondary rounded-pill px-4">
                            <i class="fas fa-undo me-1"></i> Reset Filters
                        </a>
                        <button type="submit" class="btn btn-sm btn-primary rounded-pill px-4">
                            <i class="fas fa-search me-1"></i> Apply Filters
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Request Cards -->
    @if (Model != null && Model.Any())
    {
        <div class="row row-cols-1 row-cols-md-2 row-cols-xl-3 g-4">
            @foreach (var request in Model)
            {
                var statusConfig = request.RequestStatus switch
                {
                    "Approved" => (BadgeClass: "bg-success-subtle text-success-emphasis", Text: "Approved", Icon: "fas fa-check-circle"),
                    "Pending" => (BadgeClass: "bg-warning-subtle text-warning-emphasis", Text: "Pending", Icon: "fas fa-clock"),
                    "Rejected" => (BadgeClass: "bg-danger-subtle text-danger-emphasis", Text: "Rejected", Icon: "fas fa-times-circle"),
                    _ => (BadgeClass: "bg-secondary-subtle text-secondary-emphasis", Text: "Unknown", Icon: "fas fa-question-circle")
                };

                <div class="col">
                    <div class="card h-100 shadow-sm border-0 rounded-3 request-card">
                        <div class="card-header bg-transparent py-3 px-4 border-bottom d-flex justify-content-between align-items-center">
                            <span class="badge rounded-pill px-3 py-2 @statusConfig.BadgeClass fs-sm">
                                <i class="@statusConfig.Icon me-1"></i> @statusConfig.Text
                            </span>
                            <small class="text-muted">ID: @request.Id.ToString().Substring(0, 8)...</small>
                        </div>
                        <div class="card-body p-4">
                            <div class="mb-2">
                                <small class="text-muted d-block">Company</small>
                                <p class="fw-semibold mb-0">@request.CompanyName</p>
                            </div>
                            <div class="mb-2">
                                <small class="text-muted d-block">Applicant Email</small>
                                <p class="fw-semibold mb-0">@request.Email</p>
                            </div>
                            <div class="row gx-2">
                                <div class="col-6 mb-2">
                                    <small class="text-muted d-block">Request Date</small>
                                    <p class="fw-semibold mb-0">@request.RequestTime.ToString("dd MMM yyyy, HH:mm")</p>
                                </div>
                                <div class="col-6 mb-2">
                                    <small class="text-muted d-block">Flight Date/Time</small>
                                    <p class="fw-semibold mb-0">@request.EntryTime.ToString("dd MMM yyyy, HH:mm")</p>
                                </div>
                            </div>
                        </div>
                        <div class="card-footer bg-white py-3 px-4 border-top-0">
                            <div class="d-flex justify-content-start gap-2 flex-wrap">
                                <a href="@Url.Action("Details", new { id = request.Id })" class="btn btn-sm btn-outline-secondary rounded-pill px-3" title="View Details">
                                    <i class="fas fa-eye me-1"></i> Details
                                </a>
                                <a href="@Url.Action("Edit", new { id = request.Id })" class="btn btn-sm btn-outline-primary rounded-pill px-3" title="Edit Request">
                                    <i class="fas fa-pencil-alt me-1"></i> Edit
                                </a>
                                <a href="@Url.Action("Delete", new { id = request.Id })" class="btn btn-sm btn-outline-danger rounded-pill px-3" title="Delete Request">
                                    <i class="fas fa-trash me-1"></i> Delete
                                </a>
                                <a href="@Url.Action("ChangeStatus", new { id = request.Id })" class="btn btn-sm btn-outline-info rounded-pill px-3" title="Change Status">
                                    <i class="fas fa-exchange-alt me-1"></i> Status
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <!-- No Data Placeholder -->
        <div class="text-center py-5">
            <div class="card border-0 shadow-sm mx-auto" style="max-width: 480px;">
                <div class="card-body p-lg-5 p-4">
                    <img src="/images/no-requests-illustration.svg" alt="No requests found" class="img-fluid mb-4" style="max-height: 200px;" />
                    <h3 class="fw-bold text-dark mb-3">No Requests Found</h3>
                    @if (!string.IsNullOrEmpty(currentEmail) || currentStatus != "All" || !string.IsNullOrEmpty(currentRequestDateFrom) /* etc. check all filters */)
                    {
                        <p class="text-muted mb-4">No requests match your current filter criteria. Try adjusting or clearing them.</p>
                        <a asp-action="Index" class="btn btn-outline-primary rounded-pill px-4 py-2">
                            <i class="fas fa-undo me-2"></i> Clear Filters
                        </a>
                    }
                    else
                    {
                        <p class="text-muted mb-4">Start by creating a new airport request.</p>
                        <a href="@Url.Action("Create")" class="btn btn-primary rounded-pill px-4 py-2">
                            <i class="fas fa-plus-circle me-2"></i> Create New Request
                        </a>
                    }
                </div>
            </div>
        </div>
    }
</div>

@section Styles {
    <style>
        body {
            background-color: #f8f9fa; /* Light gray background for the page */
        }

        .card-header .collapse-icon {
            transition: transform 0.2s ease-in-out;
        }

        .card-header a[aria-expanded="true"] .collapse-icon {
            transform: rotate(180deg);
        }

        .request-card {
            transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
        }

            .request-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 .5rem 1.5rem rgba(0,0,0,.1) !important;
            }

        .badge.fs-sm { /* Custom class for slightly smaller badge font */
            font-size: 0.8rem;
        }

        /* For Bootstrap 5.3+ subtle badges (e.g., bg-success-subtle) */
        /* If using older Bootstrap, you might need to define these manually:
            .bg-success-subtle { background-color: var(--bs-success-bg-subtle); }
            .text-success-emphasis { color: var(--bs-success-text-emphasis); }
            */
    </style>
}

@section Scripts {
    <script>
        // Optional: Persist collapse state of search/filter section
        document.addEventListener('DOMContentLoaded', function () {
            const filterCollapse = document.getElementById('searchFilterCollapse');
            if (filterCollapse) {
                // Check if any filter input (excluding status 'All') has a value to auto-open
                let hasActiveFilter = false;
                const filterInputs = filterCollapse.querySelectorAll('input[type="text"], input[type="date"], select');
                filterInputs.forEach(input => {
                    if (input.name === 'status' && input.value === 'All') {
                        // Skip 'All' status
                    } else if (input.value && input.value.trim() !== '') {
                        hasActiveFilter = true;
                    }
                });

                if (hasActiveFilter) {
                    new bootstrap.Collapse(filterCollapse, {
                        show: true
                    });
                }
            }
        });
    </script>
}