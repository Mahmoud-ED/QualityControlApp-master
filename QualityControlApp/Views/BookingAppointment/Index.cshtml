@model QualityControlApp.ViewModels.BookingAppointmentIndexVM
@using System.Text.Json

@{
    ViewData["Title"] = "Manage Appointment Bookings";
    var detailsUrlTemplate = Url.Action("Edit", "BookingAppointment", new { id = "__ID__" });
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
<link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
<link href="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/main.min.css" rel="stylesheet" />

<style>
    :root {
        --qc-primary-blue: #005A9C;
    }

    .fc-event {
        cursor: pointer;
    }

    .filter-panel {
        max-height: 0;
        opacity: 0;
        transition: max-height 0.5s ease-in-out, opacity 0.5s ease-in-out;
        overflow: hidden;
    }

    .filter-panel.show {
        max-height: 500px;
        opacity: 1;
    }
</style>

<div class="container-fluid px-lg-4 py-4">

    <div class="page-header mb-5">
        <h1><i class="fas fa-calendar-check me-2" style="color: var(--qc-primary-blue);"></i>@ViewData["Title"]</h1>
        <div class="header-actions">
           <button class="btn btn-outline-secondary" onclick="toggleFilters()" aria-controls="searchFilters" aria-expanded="false">
                <i class="fas fa-filter"></i> Filter Options
           </button>

            <a asp-action="Create" class="btn btn-primary">
                <i class="fas fa-plus"></i> Add New Booking
            </a>
        </div>
    </div>

    <div id="searchFilters" class="filter-panel mb-5">
        <div class="row g-3 align-items-end">
            <div class="col-md-5">
                <label for="companyFilter" class="form-label"><i class="fas fa-building me-1"></i>Company</label>
                <select id="companyFilter" class="form-select" asp-items="Model.CompanySelectList" onchange="applyFilters()">
                    <option value="" selected>-- All Companies --</option>
                </select>
            </div>
            <div class="col-md-4">
                <label for="bookingDateFilter" class="form-label"><i class="fas fa-calendar-day me-1"></i>Booking Date</label>
                <input type="date" id="bookingDateFilter" class="form-control" onchange="applyFilters()">
            </div>
            <div class="col-md-3 text-md-end mt-3 mt-md-0">
                <button class="btn btn-sm btn-outline-danger w-100" onclick="clearFilters()">
                    <i class="fas fa-times me-1"></i>Clear Filters
                </button>
            </div>
        </div>
    </div>

    <div id="calendarContainer" class="mb-4 mt-5">
        <div id="calendar"></div>
    </div>

    <div id="appointmentsTableContainer">
        @await Html.PartialAsync("_BookingAppointmentsTable", Model)
    </div>

</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")

    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/index.global.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/locales-all.global.min.js"></script>

    <script>
        const detailsUrlTemplate = '@Html.Raw(detailsUrlTemplate)';

        function toggleFilters() {
            const filters = document.getElementById('searchFilters');
            filters.classList.toggle('show');

            const isExpanded = filters.classList.contains('show');
            const toggleButton = document.querySelector('[aria-controls="searchFilters"]');
            if (toggleButton) {
                toggleButton.setAttribute('aria-expanded', isExpanded);
            }
        }

        function applyFilters() {
            var companyId = document.getElementById('companyFilter').value;
            var bookingDate = document.getElementById('bookingDateFilter').value;

            console.log("Filtering Table - Company:", companyId, "Date:", bookingDate);

            $('#appointmentsTableContainer').html(
                '<div class="loading-spinner">' +
                '</div>'
            );

            $.ajax({
                url: '@Url.Action("FilterAppointments", "BookingAppointment")',
                type: 'GET',
                data: {
                    companyId: companyId || null,
                    bookingDate: bookingDate || null
                },
                success: function (data) {
                    $('#appointmentsTableContainer').html(data);
                    console.log("Table Filter successful.");
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    $('#appointmentsTableContainer').html(
                        + textStatus + ' - ' + errorThrown + '</div>'
                    );
                    console.error("Table AJAX Error:", textStatus, errorThrown, jqXHR.responseText);
                }
            });
        }

        function clearFilters() {
            document.getElementById('companyFilter').value = '';
            document.getElementById('bookingDateFilter').value = '';
            applyFilters();
        }

        document.addEventListener('DOMContentLoaded', function () {
            const calendarEl = document.getElementById('calendar');

            const calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                locale: 'en',
                direction: 'ltr',

                headerToolbar: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'dayGridMonth,timeGridWeek'
                },
                buttonText: {
                    today: 'Today',
                    month: 'Month',
                    week: 'Week',
                },
                navLinks: true,
                dayMaxEvents: true,
                events: @Html.Raw(JsonSerializer.Serialize(
             Model.Appointments.Select(a => new
             {
                 title = a.Company?.Name ?? "not Selected",
                 start = a.BookingDate.ToString("yyyy-MM-dd"),
                 extendedProps = new
                 {
                     appointmentId = a.Id,
                 },
             })
             )),

                eventTimeFormat: {
                    hour: 'numeric',
                    minute: '2-digit',
                    meridiem: 'short'
                },

                eventClick: function (info) {
                    info.jsEvent.preventDefault();

                    const props = info.event.extendedProps;
                    const appointmentId = props.appointmentId;

                    console.log('Event clicked - Appointment ID:', appointmentId);

                    if (appointmentId && detailsUrlTemplate) {
                        const finalUrl = detailsUrlTemplate.replace('__ID__', appointmentId);
                        console.log('Navigating to:', finalUrl);

                        window.location.href = finalUrl;
                    } else {
                        console.error('Could not navigate: Appointment ID or URL template missing.', props);
                    }
                }

            });

            calendar.render();
        });
    </script>
}
